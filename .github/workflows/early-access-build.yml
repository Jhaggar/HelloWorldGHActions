name: Oracle JDK and Open JDK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build_wopenjdk_17_18:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        java-version: [ 17, 18 ]
        java-fixed-version: [ 17.0.1, 18-ea ]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Oracle Open JDK ${{ matrix.java-version }}
      uses: oracle-actions/setup-java@v1
      id: download-jdk
      with:
        website: oracle.com
        release: ${{ matrix.java-version }}
        version: ${{ matrix.java-fixed-version }}
        distribution: 'zulu'
        install: true
    - name: 'Print outputs'
      shell: bash
      run: |
        echo 'Outputs'
        echo "steps.download-jdk.outputs.archive = ${{ steps.download-jdk.outputs.archive }}"
        echo "steps.download-jdk.outputs.version = ${{ steps.download-jdk.outputs.version }}"
    - name: 'JDK Version'
      run: java --version
    - name: Build with Maven
      run: mvn -B package --file pom.xml 
  build_wopenjdk_loom:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        java-version: [ '18', 'loom', 'panama' ]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Oracle Open JDK ${{ matrix.java-version }}
      uses: oracle-actions/setup-java@v1
      id: download-jdk
      with:
        website: jdk.java.net
        release: ${{ matrix.java-version }}
    - name: 'Print outputs'
      shell: bash
      run: |
        echo 'Outputs'
        echo "steps.download-jdk.outputs.archive = ${{ steps.download-jdk.outputs.archive }}"
        echo "steps.download-jdk.outputs.version = ${{ steps.download-jdk.outputs.version }}"
    - name: 'JDK Version'
      run: java --version
    - name: Build with Maven
      run: mvn -B package --file pom.xml
